{"version":3,"sources":["js/bcg.js"],"names":["colors","Array","step","colorIndices","gradientSpeed","updateGradient","$","undefined","c0_0","c0_1","c1_0","c1_1","istep","color1","Math","round","color2","css","background","floor","random","length","setInterval"],"mappings":";AAAA,IAAIA,EAAS,IAAIC,MACb,CAAC,IAAK,IAAK,KAAM,CAAC,IAAK,IAAK,KAAM,CAAC,IAAK,IAAK,KAAM,CAAC,IAAK,GAAI,KAAM,CAAC,IAAK,IAAK,KAAM,CAAC,IAAK,IAAK,KAAM,CAAC,IAAK,IAAK,KAAM,CAAC,IAAK,GAAI,KAAM,CAAC,IAAK,IAAK,KAAM,CAAC,IAAK,IAAK,MAGlKC,EAAO,EAMPC,EAAe,CAAC,EAAG,EAAG,EAAG,GAGzBC,EAAgB,KAEpB,SAASC,IACDC,QAAMC,IAAND,EAAAA,CAEAE,IAAAA,EAAOR,EAAOG,EAAa,IAC3BM,EAAOT,EAAOG,EAAa,IAC3BO,EAAOV,EAAOG,EAAa,IAC3BQ,EAAOX,EAAOG,EAAa,IAE3BS,EAAQ,EAAIV,EAIZW,EAAS,OAHJC,KAAKC,MAAMH,EAAQJ,EAAK,GAAKN,EAAOO,EAAK,IAGvB,IAFlBK,KAAKC,MAAMH,EAAQJ,EAAK,GAAKN,EAAOO,EAAK,IAEZ,IAD7BK,KAAKC,MAAMH,EAAQJ,EAAK,GAAKN,EAAOO,EAAK,IACD,IAK7CO,EAAS,OAHJF,KAAKC,MAAMH,EAAQF,EAAK,GAAKR,EAAOS,EAAK,IAGvB,IAFlBG,KAAKC,MAAMH,EAAQF,EAAK,GAAKR,EAAOS,EAAK,IAEZ,IAD7BG,KAAKC,MAAMH,EAAQF,EAAK,GAAKR,EAAOS,EAAK,IACD,IAEjDL,EAAE,aACGW,IAAI,CACDC,WAAY,sDAAwDL,EAAS,SAAWG,EAAS,OAEpGC,IAAI,CACDC,WAAY,8BAAgCL,EAAS,QAAUG,EAAS,YAGhFd,GAAQE,IACI,IACRF,GAAQ,EACRC,EAAa,GAAKA,EAAa,GAC/BA,EAAa,GAAKA,EAAa,GAI/BA,EAAa,IACRA,EAAa,GAAKW,KAAKK,MAAM,EAAIL,KAAKM,UAAYpB,EAAOqB,OAAS,KAAOrB,EAAOqB,OACrFlB,EAAa,IACRA,EAAa,GAAKW,KAAKK,MAAM,EAAIL,KAAKM,UAAYpB,EAAOqB,OAAS,KAAOrB,EAAOqB,SAI7FC,YAAYjB,EAAgB","file":"bcg.4eedb5ee.js","sourceRoot":"../src","sourcesContent":["var colors = new Array(\n    [255, 184, 201], [255, 165, 186], [255, 184, 201], [248, 70, 114], [255, 184, 201], [255, 165, 186], [255, 184, 201], [248, 70, 114], [255, 184, 201], [255, 165, 186],\n);\n\nvar step = 0;\n//color table indices for:\n// current color left\n// next color left\n// current color right\n// next color right\nvar colorIndices = [0, 1, 2, 3];\n\n//transition speed\nvar gradientSpeed = 0.002;\n\nfunction updateGradient() {\n    if ($ === undefined) return;\n\n    var c0_0 = colors[colorIndices[0]];\n    var c0_1 = colors[colorIndices[1]];\n    var c1_0 = colors[colorIndices[2]];\n    var c1_1 = colors[colorIndices[3]];\n\n    var istep = 1 - step;\n    var r1 = Math.round(istep * c0_0[0] + step * c0_1[0]);\n    var g1 = Math.round(istep * c0_0[1] + step * c0_1[1]);\n    var b1 = Math.round(istep * c0_0[2] + step * c0_1[2]);\n    var color1 = 'rgb(' + r1 + ',' + g1 + ',' + b1 + ')';\n\n    var r2 = Math.round(istep * c1_0[0] + step * c1_1[0]);\n    var g2 = Math.round(istep * c1_0[1] + step * c1_1[1]);\n    var b2 = Math.round(istep * c1_0[2] + step * c1_1[2]);\n    var color2 = 'rgb(' + r2 + ',' + g2 + ',' + b2 + ')';\n\n    $('#gradient')\n        .css({\n            background: '-webkit-gradient(linear, left top, right top, from(' + color1 + '), to(' + color2 + '))',\n        })\n        .css({\n            background: '-moz-linear-gradient(left, ' + color1 + ' 0%, ' + color2 + ' 100%)',\n        });\n\n    step += gradientSpeed;\n    if (step >= 1) {\n        step %= 1;\n        colorIndices[0] = colorIndices[1];\n        colorIndices[2] = colorIndices[3];\n\n        //pick two new target color indices\n        //do not pick the same as the current one\n        colorIndices[1] =\n            (colorIndices[1] + Math.floor(1 + Math.random() * (colors.length - 1))) % colors.length;\n        colorIndices[3] =\n            (colorIndices[3] + Math.floor(1 + Math.random() * (colors.length - 1))) % colors.length;\n    }\n}\n\nsetInterval(updateGradient, 10);"]}